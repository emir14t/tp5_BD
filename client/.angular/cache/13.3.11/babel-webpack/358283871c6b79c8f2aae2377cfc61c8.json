{"ast":null,"code":"import _classCallCheck from \"/Users/emirtuncbilek/Desktop/z_DB_Angular/INF3710_TutorielApp-2/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/emirtuncbilek/Desktop/z_DB_Angular/INF3710_TutorielApp-2/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from \"@angular/common/http\"; // tslint:disable-next-line:ordered-imports\n\nimport { of, Subject } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var CommunicationService = /*#__PURE__*/(function () {\n  var CommunicationService = /*#__PURE__*/function () {\n    function CommunicationService(http) {\n      _classCallCheck(this, CommunicationService);\n\n      this.http = http;\n      this.BASE_URL = \"http://localhost:3000/database\";\n      this._listners = new Subject();\n    }\n\n    return _createClass(CommunicationService, [{\n      key: \"listen\",\n      value: function listen() {\n        return this._listners.asObservable();\n      }\n    }, {\n      key: \"filter\",\n      value: function filter(filterBy) {\n        this._listners.next(filterBy);\n      }\n    }, {\n      key: \"getBirds\",\n      value: function getBirds() {\n        return this.http.get(this.BASE_URL + \"/oiseau\").pipe(catchError(this.handleError(\"getBirds\")));\n      }\n    }, {\n      key: \"insertBird\",\n      value: function insertBird(bird) {\n        return this.http.post(this.BASE_URL + \"/oiseau\", bird).pipe(catchError(this.handleError(\"insertBird\")));\n      }\n    }, {\n      key: \"updateBird\",\n      value: function updateBird(bird, oldBirdID) {\n        return this.http.put(this.BASE_URL + \"/oiseau/update/\".concat(oldBirdID), bird).pipe(catchError(this.handleError(\"updateBird\")));\n      }\n    }, {\n      key: \"deleteBird\",\n      value: function deleteBird(birdID) {\n        return this.http.post(this.BASE_URL + \"/oiseau/\" + birdID, {}).pipe(catchError(this.handleError(\"deleteBird\")));\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(request, result) {\n        return function (error) {\n          return of(result);\n        };\n      }\n    }]);\n  }();\n\n  CommunicationService.ɵfac = function CommunicationService_Factory(t) {\n    return new (t || CommunicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommunicationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommunicationService,\n    factory: CommunicationService.ɵfac\n  });\n  return CommunicationService;\n})();","map":null,"metadata":{},"sourceType":"module"}